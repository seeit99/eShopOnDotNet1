---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: eShopOnDotNet
  description: The place to be, for your shopping needs
  annotations:
    github.com/project-slug: abdulkhadar-Capgemini/TestNodejs
    jenkins.io/job-full-name: TF-22-02-2023
  links:
    - url: https://backstage.io/plugins/
      title: Backstage Plugins
      icon: dashboard
  tags:
    - microservices
spec:
  type: service
  owner: abdul.azeez@capgemini.com
  lifecycle: production
  system: eContainer Shop1
  providesApis:
    - hello-world
  consumesApis:
    - starwars-graphql
    - streetlights

---
apiVersion: backstage.io/v1beta1
kind: API
metadata:
  name: my-api
  description: My awesome API
  labels:
    owner: my-team
spec:
  type: openapi
  lifecycle:
    alpha: {}
  owner: my-team
  definition:
    type: http
    uri: https://petstore.swagger.io/v2/swagger.json
  versions:
    - version: 1.0.0
      changelog:
        summary: Initial release
        description: First version of my API
      spec:
        type: openapi
        lifecycle:
          alpha: {}
        owner: my-team
        definition:
          type: swagger
          data: |
            swagger: '2.0'
            info:
              title: My API
              version: '1.0.0'
              description: My awesome API
            paths:
              /pets:
                get:
                  summary: List all pets
                  operationId: listPets
                  responses:
                    '200':
                      description: A list of pets
                      schema:
                        type: array
                        items:
                          $ref: '#/definitions/Pet'
              /pets/{id}:
                get:
                  summary: Find pet by ID
                  operationId: getPetById
                  parameters:
                    - name: id
                      in: path
                      required: true
                      type: integer
                      format: int64
                  responses:
                    '200':
                      description: Return the pet by ID
                      schema:
                        $ref: '#/definitions/Pet'
definitions:
  Pet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      photoUrls:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/Tag"
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
